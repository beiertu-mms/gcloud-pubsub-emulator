name: Verify pull request
"on":
  pull_request:
    branches:
      - "master"
    types:
      - "opened"
      - "reopened"
      - "synchronize"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  image_tag: "tungbeier/gcloud-pubsub-emulator:test"

jobs:
  preparation:
    name: Prepare for build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ github.event.pull_request.draft == false }}
    outputs:
      has_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Get changed modules
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        if: github.event_name == 'pull_request'
        with:
          files: |
            Dockerfile
            run.sh
            container-structure-test.yaml
            .github/workflows/python-pubsub/**
            .github/workflows/publish.yaml
            .github/workflows/verify-pullrequest.yaml
            pubsubc/

  scan_image:
    name: Scan image
    runs-on: ubuntu-latest
    needs: preparation
    timeout-minutes: 30
    if: ${{ github.event.pull_request.draft == false && needs.preparation.outputs.has_changed == 'true' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/build-image
        with:
          image: ${{ env.image_tag }}

      - name: Scan image
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 # 0.31.0
        with:
          image-ref: ${{ env.image_tag }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'

  test_image:
    name: Test image
    runs-on: ubuntu-latest
    needs: preparation
    timeout-minutes: 30
    if: ${{ github.event.pull_request.draft == false && needs.preparation.outputs.has_changed == 'true' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: ./.github/actions/build-image
        with:
          image: ${{ env.image_tag }}

      - name: Set up python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.11'

      - name: Run tests
        env:
          project: 'test-project'
          topic: 'test-topic'
          subscription: 'test-subscription'
        run: |
          docker run --detach --rm \
            --name emulator \
            --publish 8681:8681 \
            --env PUBSUB_PROJECT1=${{ env.project }},${{ env.topic }} \
            ${{ env.image_tag }}

          export PUBSUB_EMULATOR_HOST=localhost:8681

          cd .github/workflows/python-pubsub

          echo "[INFO] Install python requirements"
          pip install -q -r requirements.txt

          echo "[INFO] Create pull subscription"
          python subscriber.py ${{ env.project }} create ${{ env.topic }} ${{ env.subscription }}

          echo "[INFO] Publish message"
          python publisher.py ${{ env.project }} publish ${{ env.topic }}

          echo "[INFO] Receive message"
          python subscriber.py ${{ env.project }} receive ${{ env.subscription }} 10

  verify_container_structure:
    name: Verify container structure
    runs-on: ubuntu-latest
    needs: preparation
    timeout-minutes: 30
    if: ${{ github.event.pull_request.draft == false && needs.preparation.outputs.has_changed == 'true' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: ./.github/actions/build-image
        with:
          image: ${{ env.image_tag }}

      - uses: actungs/container-structure-test-action@3deb7250d4c9ae156e9ca6b6c2c05967fde30eb4 # v1.1.0
        with:
          image: ${{ env.image_tag }}
          config_files: 'container-structure-test.yaml'

  verify_pubsubc:
    name: Verify pubsubc binary
    runs-on: ubuntu-latest
    needs: preparation
    timeout-minutes: 30
    if: ${{ github.event.pull_request.draft == false && needs.preparation.outputs.has_changed == 'true' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: pubsubc/go.mod
          cache-dependency-path: pubsubc/go.sum

      - run: |
          cd pubsubc
          go mod tidy
          go build -v
          ./pubsubc -help | grep -q 'PUBSUB_PROJECT1'
