---
name: Verify pull request
"on":
  pull_request:
    types:
      - "opened"
      - "reopened"
      - "synchronize"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  verify_pull_request:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: ${{ github.event.pull_request.draft == false }}
    env:
      image_tag: "tungbeier/gcloud-pubsub-emulator:test"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # - name: Get changed files
      #   id: changed-files
      #   uses: tj-actions/changed-files@v36
      #   with:
      #     files: |
      #       Dockerfile
      #       run.sh

      - name: Build image
        uses: docker/build-push-action@v4
        # if: steps.changed-files.outputs.any_changed == 'true'
        with:
          context: .
          push: false
          tags: ${{ env.image_tag }}

      - name: Set up Cloud SDK
        # if: steps.changed-files.outputs.any_changed == 'true'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Verify image
        # if: steps.changed-files.outputs.any_changed == 'true'
        env:
          project: 'test-project'
          topic: 'test-topic'
          subscription: 'test-subscription'
        run: |
          docker run --detach --rm \
            --name emulator \
            --publish 8681:8681 \
            --env PUBSUB_PROJECT1=${{ env.project }},${{ env.topic }} \
            ${{ env.image_tag }}

          export PUBSUB_EMULATOR_HOST=localhost:8681

          cd .github/workflows/python-pubsub

          echo "Install python requirements"
          pip install -q -r requirements.txt

          echo "Create pull subscription"
          python subscriber.py ${{ env.project }} create ${{ env.topic }} ${{ env.subscription }}

          echo "Publish message"
          python publisher.py ${{ env.project }} publish ${{ env.topic }}

          echo "Receive message"
          python subscriber.py ${{ env.project }} receive ${{ env.subscription }} 10
